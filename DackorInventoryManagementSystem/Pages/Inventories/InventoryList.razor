@page "/inventories"

@inject NavigationManager NavigationManager
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameCase

<h3>Inventory List</h3>
<br/>
<ViewInventoriesComponent 
    OnSearchInventories="OnSearchInventoires">
</ViewInventoriesComponent>
<br/>

@if (listInventories != null)
{
    <table style="width:90%" class="table">
        <thead>
            <tr>
                <th width="200px">Name</th>
                <th width="100px">Quantity</th>
                <th width="100px">Price</th>
                <th width="100px">Type</th>
                <th width="100px">Size</th>
                <th width="100px">Edit / Delete</th>

            </tr>
        </thead>
        <tbody>
            @foreach(var inv in this.listInventories)
            {
                <InventoryItemComponent 
                    Inventory="inv"
                    OnInventoryDeleted="DeleteInventory"
                ></InventoryItemComponent>
            }
        </tbody>
    </table>
}
<br/>
<button type="button" class="btn btn-primary" @onclick="AddInventory"> Add Inventory</button>

@code {
    private List<Inventory>? listInventories;

    protected override async Task OnInitializedAsync()
    {
        await LoadInventories();
    }

    private void OnSearchInventoires(List<Inventory> inventories)
    {
        listInventories = inventories;
    }

    private void AddInventory()
    {
        NavigationManager.NavigateTo("/addinventory");
    }

    private async Task DeleteInventory()
    {
        await LoadInventories();
    }

    private async Task LoadInventories()
    {
        var invs = await ViewInventoriesByNameCase.ExcecuteAsync();
        this.listInventories = invs.ToList();
    }
}
