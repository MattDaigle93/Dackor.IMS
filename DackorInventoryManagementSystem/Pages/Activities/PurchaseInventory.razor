@page "/purchase"

@attribute [Authorize]

@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase

@using DackorInventoryManagementSystem.Shared.ViewModels
<h3>Purchase Inventory</h3>
<br/>

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel"
        OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div style="width:600px" class="form-group">
            <lable for="po">Purchase Order</lable>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>
        </div>

        <div style="width:600px" class="form-group">
            <lable for="inv">Inventory to Purchase</lable>
            <ViewInventoriesComponent 
                OnSelectInventory="OnSelectInventory"
                DisplaySearchResult="true">
            </ViewInventoriesComponent>
            <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>
            <input type="hidden" value="@purchaseViewModel?.InentoryId"/>

            @if (selectedInventory != null)
            {
                <text>Price:</text>
                @selectedInventory?.Price.ToString("c")
            }

        </div>

        <div style="width:600px" class="form-group">
            <lable for="qty">Quantity</lable>
            <InputNumber id="qty" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Purchase</button>

    </EditForm>
}




@code {
    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();
    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InentoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName;
    }

    private async Task OnValidSubmit()
    {
        await PurchaseInventoryUseCase.ExecuteAsync(
            this.purchaseViewModel.PurchaseOrder,
            this.selectedInventory,
            this.purchaseViewModel.QuantityToPurchase,
            "Matt"
        );

        this.purchaseViewModel = new PurchaseViewModel();
        this.selectedInventory = null;
    }
}
